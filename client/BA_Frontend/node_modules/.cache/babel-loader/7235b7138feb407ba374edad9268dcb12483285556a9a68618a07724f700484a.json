{"ast":null,"code":"import './App.css';\n\n// Wait for the DOM to be fully loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Get form elements\n  const form = document.querySelector('form');\n  const emailInput = document.querySelector('#email');\n  const passwordInput = document.querySelector('#password');\n  const submitButton = document.querySelector('#submit-btn');\n\n  // Add event listener for form submission\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n    validateForm();\n  });\n\n  // Add event listeners for input fields\n  emailInput.addEventListener('input', toggleButtonState);\n  passwordInput.addEventListener('input', toggleButtonState);\n\n  // Function to validate form\n  function validateForm() {\n    const email = emailInput.value.trim();\n    const password = passwordInput.value.trim();\n    if (email === '') {\n      showError(emailInput, 'Please enter your email');\n    } else if (!isValidEmail(email)) {\n      showError(emailInput, 'Please enter a valid email');\n    } else {\n      removeError(emailInput);\n    }\n    if (password === '') {\n      showError(passwordInput, 'Please enter your password');\n    } else if (password.length < 6) {\n      showError(passwordInput, 'Password must be at least 6 characters');\n    } else {\n      removeError(passwordInput);\n    }\n    if (isValidEmail(email) && password.length >= 6) {\n      // Simulate form submission\n      submitButton.textContent = 'Signing In...';\n      submitButton.disabled = true;\n      setTimeout(() => {\n        alert('Sign in successful!');\n        form.reset();\n        submitButton.textContent = 'Sign In';\n        submitButton.disabled = false;\n      }, 2000);\n    }\n  }\n\n  // Function to show error message\n  function showError(input, message) {\n    const formControl = input.parentElement;\n    const errorElement = formControl.querySelector('.error-message');\n    formControl.classList.add('error');\n    errorElement.textContent = message;\n  }\n\n  // Function to remove error message\n  function removeError(input) {\n    const formControl = input.parentElement;\n    formControl.classList.remove('error');\n    const errorElement = formControl.querySelector('.error-message');\n    errorElement.textContent = '';\n  }\n\n  // Function to validate email format\n  function isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  // Function to toggle button state\n  function toggleButtonState() {\n    const email = emailInput.value.trim();\n    const password = passwordInput.value.trim();\n    submitButton.disabled = !(email !== '' && password !== '');\n  }\n\n  // Apply blue and white color scheme\n  document.body.style.backgroundColor = '#0052CC';\n  document.body.style.color = '#FFFFFF';\n  const inputs = document.querySelectorAll('input');\n  inputs.forEach(input => {\n    input.style.backgroundColor = '#FFFFFF';\n    input.style.color = '#0052CC';\n  });\n  submitButton.style.backgroundColor = '#FFFFFF';\n  submitButton.style.color = '#0052CC';\n});","map":{"version":3,"names":["document","addEventListener","form","querySelector","emailInput","passwordInput","submitButton","event","preventDefault","validateForm","toggleButtonState","email","value","trim","password","showError","isValidEmail","removeError","length","textContent","disabled","setTimeout","alert","reset","input","message","formControl","parentElement","errorElement","classList","add","remove","emailRegex","test","body","style","backgroundColor","color","inputs","querySelectorAll","forEach"],"sources":["/Users/joeycastaneda/CS35L-Bruin-Active-/client/BA_Frontend/src/App.js"],"sourcesContent":["\nimport './App.css';\n\n// Wait for the DOM to be fully loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Get form elements\n  const form = document.querySelector('form');\n  const emailInput = document.querySelector('#email');\n  const passwordInput = document.querySelector('#password');\n  const submitButton = document.querySelector('#submit-btn');\n\n  // Add event listener for form submission\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n    validateForm();\n  });\n\n  // Add event listeners for input fields\n  emailInput.addEventListener('input', toggleButtonState);\n  passwordInput.addEventListener('input', toggleButtonState);\n\n  // Function to validate form\n  function validateForm() {\n    const email = emailInput.value.trim();\n    const password = passwordInput.value.trim();\n\n    if (email === '') {\n      showError(emailInput, 'Please enter your email');\n    } else if (!isValidEmail(email)) {\n      showError(emailInput, 'Please enter a valid email');\n    } else {\n      removeError(emailInput);\n    }\n\n    if (password === '') {\n      showError(passwordInput, 'Please enter your password');\n    } else if (password.length < 6) {\n      showError(passwordInput, 'Password must be at least 6 characters');\n    } else {\n      removeError(passwordInput);\n    }\n\n    if (isValidEmail(email) && password.length >= 6) {\n      // Simulate form submission\n      submitButton.textContent = 'Signing In...';\n      submitButton.disabled = true;\n      setTimeout(() => {\n        alert('Sign in successful!');\n        form.reset();\n        submitButton.textContent = 'Sign In';\n        submitButton.disabled = false;\n      }, 2000);\n    }\n  }\n\n  // Function to show error message\n  function showError(input, message) {\n    const formControl = input.parentElement;\n    const errorElement = formControl.querySelector('.error-message');\n    formControl.classList.add('error');\n    errorElement.textContent = message;\n  }\n\n  // Function to remove error message\n  function removeError(input) {\n    const formControl = input.parentElement;\n    formControl.classList.remove('error');\n    const errorElement = formControl.querySelector('.error-message');\n    errorElement.textContent = '';\n  }\n\n  // Function to validate email format\n  function isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  // Function to toggle button state\n  function toggleButtonState() {\n    const email = emailInput.value.trim();\n    const password = passwordInput.value.trim();\n    submitButton.disabled = !(email !== '' && password !== '');\n  }\n\n  // Apply blue and white color scheme\n  document.body.style.backgroundColor = '#0052CC';\n  document.body.style.color = '#FFFFFF';\n  const inputs = document.querySelectorAll('input');\n  inputs.forEach(input => {\n    input.style.backgroundColor = '#FFFFFF';\n    input.style.color = '#0052CC';\n  });\n  submitButton.style.backgroundColor = '#FFFFFF';\n  submitButton.style.color = '#0052CC';\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}