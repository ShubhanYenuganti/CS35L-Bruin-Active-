{"ast":null,"code":"var _jsxFileName = \"/Users/joeycastaneda/CS35L-Bruin-Active-/client/BA_Frontend/src/utils/IsSignedIn.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Load login state from localStorage on initial load\n  // useEffect(() => {\n  //     const storedStatus = localStorage.getItem('isLoggedIn') === 'true';\n  //     setIsLoggedIn(storedStatus);\n  // }, []);\n\n  // Function to log in\n  // const login = () => {\n  //     setIsLoggedIn(true);\n  //     // localStorage.setItem('isLoggedIn', 'true');\n  // };\n\n  // // Function to log out\n  // const logout = () => {\n  //     setIsLoggedIn(false);\n  //     // localStorage.removeItem('isLoggedIn');\n  // };\n\n  const SiSwitch = () => {\n    if (isLoggedIn === false) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","SiSwitch","Provider","value","login","logout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joeycastaneda/CS35L-Bruin-Active-/client/BA_Frontend/src/utils/IsSignedIn.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    // Load login state from localStorage on initial load\n    // useEffect(() => {\n    //     const storedStatus = localStorage.getItem('isLoggedIn') === 'true';\n    //     setIsLoggedIn(storedStatus);\n    // }, []);\n\n    // Function to log in\n    // const login = () => {\n    //     setIsLoggedIn(true);\n    //     // localStorage.setItem('isLoggedIn', 'true');\n    // };\n\n    // // Function to log out\n    // const logout = () => {\n    //     setIsLoggedIn(false);\n    //     // localStorage.removeItem('isLoggedIn');\n    // };\n\n    const SiSwitch = () => {\n        if (isLoggedIn === false) {\n            setIsLoggedIn(true);\n        }\n        else {\n            setIsLoggedIn(false);\n        }\n    }\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIF,UAAU,KAAK,KAAK,EAAE;MACtBC,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MACI;MACDA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EACD,oBACIN,OAAA,CAACC,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,UAAU;MAAEK,KAAK;MAAEC;IAAO,CAAE;IAAAR,QAAA,EACtDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACX,EAAA,CAlCWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}