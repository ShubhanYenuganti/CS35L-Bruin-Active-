{"ast":null,"code":"import logo from './logo.svg';\nimport './App.css';\nfunction App() {\n  // Wait for the DOM to be fully loaded\n  document.addEventListener('DOMContentLoaded', function () {\n    // Get form elements\n    const form = document.querySelector('form');\n    const emailInput = document.querySelector('#email');\n    const passwordInput = document.querySelector('#password');\n    const submitButton = document.querySelector('#submit-btn');\n\n    // Add event listener for form submission\n    form.addEventListener('submit', function (event) {\n      event.preventDefault();\n      validateForm();\n    });\n\n    // Add event listeners for input fields\n    emailInput.addEventListener('input', toggleButtonState);\n    passwordInput.addEventListener('input', toggleButtonState);\n\n    // Function to validate form\n    function validateForm() {\n      const email = emailInput.value.trim();\n      const password = passwordInput.value.trim();\n      if (email === '') {\n        showError(emailInput, 'Please enter your email');\n      } else if (!isValidEmail(email)) {\n        showError(emailInput, 'Please enter a valid email');\n      } else {\n        removeError(emailInput);\n      }\n      if (password === '') {\n        showError(passwordInput, 'Please enter your password');\n      } else if (password.length < 6) {\n        showError(passwordInput, 'Password must be at least 6 characters');\n      } else {\n        removeError(passwordInput);\n      }\n      if (isValidEmail(email) && password.length >= 6) {\n        // Simulate form submission\n        submitButton.textContent = 'Signing In...';\n        submitButton.disabled = true;\n        setTimeout(() => {\n          alert('Sign in successful!');\n          form.reset();\n          submitButton.textContent = 'Sign In';\n          submitButton.disabled = false;\n        }, 2000);\n      }\n    }\n\n    // Function to show error message\n    function showError(input, message) {\n      const formControl = input.parentElement;\n      const errorElement = formControl.querySelector('.error-message');\n      formControl.classList.add('error');\n      errorElement.textContent = message;\n    }\n\n    // Function to remove error message\n    function removeError(input) {\n      const formControl = input.parentElement;\n      formControl.classList.remove('error');\n      const errorElement = formControl.querySelector('.error-message');\n      errorElement.textContent = '';\n    }\n\n    // Function to validate email format\n    function isValidEmail(email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    }\n\n    // Function to toggle button state\n    function toggleButtonState() {\n      const email = emailInput.value.trim();\n      const password = passwordInput.value.trim();\n      submitButton.disabled = !(email !== '' && password !== '');\n    }\n\n    // Apply blue and white color scheme\n    document.body.style.backgroundColor = '#0052CC';\n    document.body.style.color = '#FFFFFF';\n    const inputs = document.querySelectorAll('input');\n    inputs.forEach(input => {\n      input.style.backgroundColor = '#FFFFFF';\n      input.style.color = '#0052CC';\n    });\n    submitButton.style.backgroundColor = '#FFFFFF';\n    submitButton.style.color = '#0052CC';\n  });\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","App","document","addEventListener","form","querySelector","emailInput","passwordInput","submitButton","event","preventDefault","validateForm","toggleButtonState","email","value","trim","password","showError","isValidEmail","removeError","length","textContent","disabled","setTimeout","alert","reset","input","message","formControl","parentElement","errorElement","classList","add","remove","emailRegex","test","body","style","backgroundColor","color","inputs","querySelectorAll","forEach","_c","$RefreshReg$"],"sources":["/Users/joeycastaneda/CS35L-Bruin-Active-/client/BA_Frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  // Wait for the DOM to be fully loaded\n  document.addEventListener('DOMContentLoaded', function () {\n    // Get form elements\n    const form = document.querySelector('form');\n    const emailInput = document.querySelector('#email');\n    const passwordInput = document.querySelector('#password');\n    const submitButton = document.querySelector('#submit-btn');\n\n    // Add event listener for form submission\n    form.addEventListener('submit', function (event) {\n      event.preventDefault();\n      validateForm();\n    });\n\n    // Add event listeners for input fields\n    emailInput.addEventListener('input', toggleButtonState);\n    passwordInput.addEventListener('input', toggleButtonState);\n\n    // Function to validate form\n    function validateForm() {\n      const email = emailInput.value.trim();\n      const password = passwordInput.value.trim();\n\n      if (email === '') {\n        showError(emailInput, 'Please enter your email');\n      } else if (!isValidEmail(email)) {\n        showError(emailInput, 'Please enter a valid email');\n      } else {\n        removeError(emailInput);\n      }\n\n      if (password === '') {\n        showError(passwordInput, 'Please enter your password');\n      } else if (password.length < 6) {\n        showError(passwordInput, 'Password must be at least 6 characters');\n      } else {\n        removeError(passwordInput);\n      }\n\n      if (isValidEmail(email) && password.length >= 6) {\n        // Simulate form submission\n        submitButton.textContent = 'Signing In...';\n        submitButton.disabled = true;\n        setTimeout(() => {\n          alert('Sign in successful!');\n          form.reset();\n          submitButton.textContent = 'Sign In';\n          submitButton.disabled = false;\n        }, 2000);\n      }\n    }\n\n    // Function to show error message\n    function showError(input, message) {\n      const formControl = input.parentElement;\n      const errorElement = formControl.querySelector('.error-message');\n      formControl.classList.add('error');\n      errorElement.textContent = message;\n    }\n\n    // Function to remove error message\n    function removeError(input) {\n      const formControl = input.parentElement;\n      formControl.classList.remove('error');\n      const errorElement = formControl.querySelector('.error-message');\n      errorElement.textContent = '';\n    }\n\n    // Function to validate email format\n    function isValidEmail(email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    }\n\n    // Function to toggle button state\n    function toggleButtonState() {\n      const email = emailInput.value.trim();\n      const password = passwordInput.value.trim();\n      submitButton.disabled = !(email !== '' && password !== '');\n    }\n\n    // Apply blue and white color scheme\n    document.body.style.backgroundColor = '#0052CC';\n    document.body.style.color = '#FFFFFF';\n    const inputs = document.querySelectorAll('input');\n    inputs.forEach(input => {\n      input.style.backgroundColor = '#FFFFFF';\n      input.style.color = '#0052CC';\n    });\n    submitButton.style.backgroundColor = '#FFFFFF';\n    submitButton.style.color = '#0052CC';\n  });\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}