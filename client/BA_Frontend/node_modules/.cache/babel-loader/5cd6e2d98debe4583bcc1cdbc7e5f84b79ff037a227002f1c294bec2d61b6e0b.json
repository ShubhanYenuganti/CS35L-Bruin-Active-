{"ast":null,"code":"var _jsxFileName = \"/home/tea/Documents/UCLA/cs31-35L/cs35L/project/Bruin-Active/client/BA_Frontend/src/utils/IsSignedIn.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n// Import AuthContext to use the isLoggedIn bool, and Sign in swith (SiSwitch)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Wrap App.js in the AuthProvider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [mainUser, setmainUser] = useState(\"\");\n  const SiSwitch = () => {\n    if (isLoggedIn === false) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  };\n  const SetGlobalUser = u => {\n    setmainUser(u);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      mainUser,\n      SiSwitch,\n      SetGlobalUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ca+/pm+NF8B4RdN9jn6Ymvv+gcU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","mainUser","setmainUser","SiSwitch","SetGlobalUser","u","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tea/Documents/UCLA/cs31-35L/cs35L/project/Bruin-Active/client/BA_Frontend/src/utils/IsSignedIn.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\n// Import AuthContext to use the isLoggedIn bool, and Sign in swith (SiSwitch)\nexport const AuthContext = createContext();\n\n// Wrap App.js in the AuthProvider\nexport const AuthProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [mainUser, setmainUser] = useState(\"\");\n\n    const SiSwitch = () => {\n        if (isLoggedIn === false) {\n            setIsLoggedIn(true);\n        }\n        else {\n            setIsLoggedIn(false);\n        }\n    }\n    const SetGlobalUser = (u) => {\n        setmainUser(u);\n    }\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, mainUser, SiSwitch, SetGlobalUser }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIJ,UAAU,KAAK,KAAK,EAAE;MACtBC,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MACI;MACDA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EACD,MAAMI,aAAa,GAAIC,CAAC,IAAK;IACzBH,WAAW,CAACG,CAAC,CAAC;EAClB,CAAC;EACD,oBACIX,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,UAAU;MAAEE,QAAQ;MAAEE,QAAQ;MAAEC;IAAc,CAAE;IAAAP,QAAA,EAC1EA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACb,EAAA,CApBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}